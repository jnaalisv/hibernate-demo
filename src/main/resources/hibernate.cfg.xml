<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">

<hibernate-configuration>

    <session-factory>
        <property name="hibernate.connection.provider_class">org.hibernate.hikaricp.internal.HikariCPConnectionProvider</property>
        <property name="hibernate.hikari.minimumIdle">5</property>
        <property name="hibernate.hikari.maximumPoolSize">10</property>
        <property name="hibernate.hikari.idleTimeout">30000</property>
        <property name="connection.url">jdbc:postgresql://localhost:5432/postgres</property>
        <property name="connection.username">postgres</property>
        <property name="connection.password">password</property>
        <property name="connection.pool_size">4</property>
        <property name="dialect">org.hibernate.dialect.PostgreSQL95Dialect</property>

        <!--
        Manually manage Hibernate Session with SessionFactory.openSession() -method.
        Alternative would be to use automatically thread bound Session and ask for it with SessionFactory.getCurrentSession().
         -->
        <property name="current_session_context_class">managed</property>
        <property name="cache.provider_class">org.hibernate.cache.internal.NoCacheProvider</property>
        <property name="show_sql">false</property>
        <property name="hbm2ddl.auto">create</property>

        <mapping class="com.example.domain.Customer" />
        <mapping class="com.example.domain.Product" />
        <mapping class="com.example.domain.Order" />
        <mapping class="com.example.domain.OrderLine" />

    </session-factory>

</hibernate-configuration>